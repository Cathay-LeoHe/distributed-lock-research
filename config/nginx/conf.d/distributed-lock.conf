# Distributed Lock Application specific Nginx configuration

# Additional upstream for specific lock provider testing
upstream redis_lock_backend {
    server app1:8080 max_fails=2 fail_timeout=20s;
    server app2:8080 max_fails=2 fail_timeout=20s;
    keepalive 16;
}

upstream zookeeper_lock_backend {
    server app3:8080 max_fails=2 fail_timeout=20s;
    keepalive 16;
}

# Server block for testing specific lock providers
server {
    listen 8080;
    server_name redis.localhost;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Lock-Provider "Redis" always;
    
    location / {
        proxy_pass http://redis_lock_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Lock-Provider "redis";
        
        # Connection settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        
        # Keep alive
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
}

server {
    listen 8090;
    server_name zookeeper.localhost;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Lock-Provider "ZooKeeper" always;
    
    location / {
        proxy_pass http://zookeeper_lock_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Lock-Provider "zookeeper";
        
        # Connection settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        
        # Keep alive
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
}

# Map for routing based on lock provider header
map $http_x_lock_provider $backend_pool {
    default distributed_lock_backend;
    "redis" redis_lock_backend;
    "zookeeper" zookeeper_lock_backend;
}

# Enhanced main server with lock provider routing
server {
    listen 8888;
    server_name api.localhost;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # Route based on lock provider header
    location / {
        proxy_pass http://$backend_pool;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Connection settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        
        # Keep alive
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
}